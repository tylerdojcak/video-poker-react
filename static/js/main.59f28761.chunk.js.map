{"version":3,"sources":["Components/Card/Card.jsx","Components/Inputs/Funds.jsx","Components/Inputs/Wager.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","selected","rank","suit","style","backgroundImage","image","onClick","handleSelectCard","index","Funds","value","fundsAmount","onChange","handleFundsChange","type","handleAddFunds","Wager","wagerAmount","handleWagerChange","App","useState","hand","setHand","disabled","setDisabled","evaluation","setEvaluation","Number","score","setScore","funds","setFunds","wager","setWager","deck","setDeck","a","newHand","fetch","then","res","json","cards","cardObj","newCard","push","updatedHand","slice","card","evaluate","map","index0","isFlush","suits","Set","size","isFiveHighStraight","fiveHighStraight","ranks","sort","every","v","i","isStraight","counts","Object","values","length","getPairValue","object","keys","find","key","aceHighStraight","isRoyalFlush","jacksOrBetter","includes","isMultiCard","currentHand","e","target","deck_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59f28761.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default function Card(props) {\r\n  function handleClick() {\r\n    props.handleSelectCard(props.index);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={props.selected ? \"card selected\" : \"card\"}\r\n      rank={props.rank}\r\n      suit={props.suit}\r\n      selected={props.selected}\r\n      style={{ backgroundImage: `url(${props.image})` }}\r\n      onClick={handleClick}\r\n    ></div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Funds(props) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Add Funds:\r\n        <input\r\n          value={props.fundsAmount}\r\n          onChange={props.handleFundsChange}\r\n          type=\"number\"\r\n        />\r\n      </label>\r\n      <button onClick={props.handleAddFunds}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Wager(props) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Enter wager:\r\n        <input\r\n          value={props.wagerAmount}\r\n          onChange={props.handleWagerChange}\r\n          type=\"number\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Card from \"./Components/Card/Card\";\nimport Funds from \"./Components/Inputs/Funds\";\nimport Wager from \"./Components/Inputs/Wager\";\n\nfunction App() {\n  let [hand, setHand] = useState([]);\n  let [disabled, setDisabled] = useState(true);\n  let [evaluation, setEvaluation] = useState(\"\");\n  let [score, setScore] = useState(Number(0));\n  let [funds, setFunds] = useState(0);\n  let [wager, setWager] = useState(0);\n  let [deck, setDeck] = useState(\"56c5o3inybix\");\n\n  function getNewDeck() {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/\")\n      .then((res) => res.json())\n      .then((res) => setDeck(res.deck_id));\n  }\n\n  async function drawFive() {\n    setScore(Number(score) - Number(wager));\n    setEvaluation(\"\");\n    setHand([]);\n    let newHand = [];\n    await fetch(`https://deckofcardsapi.com/api/deck/${deck}/shuffle/`);\n    fetch(`https://deckofcardsapi.com/api/deck/${deck}/draw/?count=5`)\n      .then((res) => res.json())\n      .then((res) => {\n        for (let cardObj of res.cards) {\n          let newCard = {\n            value: cardObj.value,\n            suit: cardObj.suit,\n            image: cardObj.image,\n            selected: false\n          };\n          newHand.push(newCard);\n        }\n        setHand(newHand);\n        setDisabled(!disabled);\n      });\n  }\n\n  async function reDraw() {\n    const updatedHand = hand.slice();\n    for (let card of updatedHand) {\n      if (card.selected) {\n        await fetch(`https://deckofcardsapi.com/api/deck/${deck}/draw/?count=1`)\n          .then((res) => res.json())\n          .then((res) => {\n            card.value = res.cards[0].value;\n            card.suit = res.cards[0].suit;\n            card.image = res.cards[0].image;\n            card.selected = false;\n          });\n      }\n    }\n    setDisabled(!disabled);\n    setHand(updatedHand);\n    evaluate(hand);\n  }\n\n  function handleSelectCard(index) {\n    const updatedHand = hand.map((card, index0) => {\n      if (index === index0) {\n        return {\n          ...card,\n          selected: !card.selected\n        };\n      } else {\n        return card;\n      }\n    });\n\n    setHand(updatedHand);\n  }\n\n  function isRoyalFlush(hand, aceHighStraight = [\"10\", \"ACE\", \"JACK\", \"KING\", \"QUEEN\"]) {\n    let ranks = [];\n    for (let card of hand) {\n      ranks.push(card.value);\n    }\n    ranks.sort()\n    return isFlush(hand) && ranks.every((v, i) => v === aceHighStraight[i]);\n  }\n\n  function isFlush(hand) {\n    let suits = [];\n    for (let card of hand) {\n      suits.push(card.suit);\n    }\n    return new Set(suits).size === 1;\n  }\n\n  function isFiveHighStraight(\n    hand,\n    fiveHighStraight = [\"2\", \"3\", \"4\", \"5\", \"ACE\"]\n  ) {\n    let ranks = [];\n    for (let card of hand) {\n      ranks.push(card.value);\n    }\n    ranks.sort();\n    return ranks.every((v, i) => v === fiveHighStraight[i]);\n  }\n\n  function isStraight(hand, counts) {\n    let ranks = [];\n    for (let card of hand) {\n      if (card.value === \"JACK\") {\n        ranks.push(11);\n      } else if (card.value === \"QUEEN\") {\n        ranks.push(12);\n      } else if (card.value === \"KING\") {\n        ranks.push(13);\n      } else if (card.value === \"ACE\") {\n        ranks.push(14);\n      } else {\n        ranks.push(Number(card.value));\n      }\n    }\n    ranks.sort();\n    return ranks[4] - ranks[0] === 4 && Object.values(counts).length === 5;\n  }\n\n  function isMultiCard(counts, jacksOrBetter = [\"JACK\", \"QUEEN\", \"KING\", \"ACE\"]) {\n    if (Object.values(counts).length === 2) {\n      if (Object.values(counts).includes(1)) {\n        return \"FOUR OF A KIND!\";\n      } else {\n        return \"FULL HOUSE!\";\n      }\n    } else if (Object.values(counts).length === 3) {\n      if (Object.values(counts).includes(3)) {\n        return \"THREE OF A KIND!\";\n      } else {\n        return \"TWO PAIR!\";\n      }\n    } else if (Object.values(counts).length === 4 && jacksOrBetter.includes(getPairValue(counts))) {\n      return \"PAIR! (JACKS OR BETTER)\";\n    } else {\n      return \"Try Again!\";\n    }\n  }\n\n  function getPairValue(object) {\n    return Object.keys(object).find((key) => object[key] === 2);\n  }\n\n  function evaluate(hand) {\n    let counts = {};\n    for (let card of hand) {\n      if (card.value in counts) {\n        counts[card.value] += 1;\n      } else {\n        counts[card.value] = 1;\n      }\n    }\n    if (isRoyalFlush(hand)) {\n      setScore(Number(score) + Number(250 * wager));\n      setEvaluation(\"ROYAL FLUSH!\");\n    } else if (\n      isFlush(hand) &&\n      (isFiveHighStraight(hand) || isStraight(hand, counts))\n    ) {\n      setEvaluation(\"STRAIGHT FLUSH!\");\n    } else if (isFlush(hand)) {\n      setEvaluation(\"FLUSH!\");\n    } else if (isFiveHighStraight(hand) || isStraight(hand, counts)) {\n      setEvaluation(\"STRAIGHT!\");\n    } else {\n      setEvaluation(isMultiCard(counts));\n    }\n  }\n\n  function handleWagerChange(e) {\n    setWager(e.target.value);\n  }\n\n  function handleFundsChange(e) {\n    setFunds(e.target.value);\n  }\n\n  function handleAddFunds() {\n    setScore(Number(score) + Number(funds));\n    setFunds(0);\n  }\n\n  let currentHand = hand.map((card, i) => (\n    <Card\n      key={i}\n      index={i}\n      rank={card.value}\n      suit={card.suit}\n      image={card.image}\n      selected={card.selected}\n      handleSelectCard={handleSelectCard}\n    />\n  ));\n\n  return (\n    <>\n      <div className=\"App\">{currentHand}</div>\n      <div className=\"button-container\">\n        <button onClick={drawFive} disabled={!disabled}>\n          DEAL\n        </button>\n        <button onClick={reDraw} disabled={disabled}>\n          REDRAW\n        </button>\n      </div>\n      <div className=\"evaluation\">{evaluation}</div>\n      <div className=\"input-container\">\n        <Wager wagerAmount={wager} handleWagerChange={handleWagerChange} />\n        <Funds\n          fundsAmount={funds}\n          handleFundsChange={handleFundsChange}\n          handleAddFunds={handleAddFunds}\n        />\n      </div>\n      <div className=\"new-deck\">\n        <button className=\"new-deck-button\" onClick={getNewDeck}>\n          New Deck\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}